
= simple_form_for(@topic) do |f|
  - f.error_notification
  .row
    .column.large-7
      .row
        .columns.large-6
          = f.input :name, placeholder:'A name for your topic'
        .columns.large-6
          = f.input :parent_topic_id, collection: Topic.topic_select, :selected=>@topic.parent_topic_id, :include_blank=>true, :hint=>'Leave blank to make a root topic', input_html: {style:'min-width:100%;', class:'select2'}
      .row
        .large-12.columns
          = f.input :description, placeholder: 'A short description'
      .row
        .large-12.columns
          = f.input :tags do
            %span{:id=>'tags', :style=>'display:none;'}= Tag.all_tags.to_json
            = f.input :tags, :as=>:hidden, input_html: {class:'select2-with-tags', style:'min-width:100%; height:36px;', value: f.object.tags.empty? ? '' : f.object.tags.join(',')}
            =# f.input :tags, collection: Tag.all.map {|t| [t.name, t.name]}, input_html: {multiple:true, class:'select2-with-tags', style:'min-width:100%; height:36px;'}
    .column.large-5
      .row
        = render :file=>'/topic_files/index'
  .row
    %br/
    .large-12.columns
      #in{style: "height: 25em; min-height:25em;"}
        = f.text_area :content
      #out{style: "min-height: 20em;"}
  .actions
    = yield :form_nav
    = f.submit "Save", :class => 'button has-tip', :title=>'Tip: CMD-s saves when in the editor!', :data=>{:tooltip=>""}

- content_for :post_body_js do
  = javascript_tag do
    $(function() {
    $('.CodeMirror').css({'height': '25em'});
    var url=$('.drop_target').attr('data-url');
    if (url) {
    var dz_element = $('.drop_target').dropzone({
    url: url,
    clickable: ".instructions",
    autoProcessQueue: true, // When set to false you have to call myDropzone.processQueue() yourself in order to upload the dropped files. See below for more information on handling queues.
    //thumbnailWidth
    //thumbnailHeight
    //addRemoveLinks: 
    //previewsContainer: , // defines where to display the file previews â€“ if null the Dropzone element is used. Can be a plain HTMLElement or a CSS selector. The element should have the dropzone-previews class so the previews are displayed properly
    //previewTemplate: //is a string that contains the template used for each dropped image. Change it to fulfill your needs but make sure to properly provide all elements.
    headers: {'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content') }
    });
    var dz = Dropzone.forElement(dz_element.get(0));
    dz.on('complete', function(file, a, b){
    console.log("complete", file, this, a, b)
    });
    dz.on('uploadprogress', function(file, a, b){
    console.log("uploadprogress", file, this, a, b)
    });
    }
    });

